@functions{
    public class Robot
    {
        private int robotId;
        private string robotName;
        private string robotText;
        private string coverImage;

        public int RobotId
        {
            get{return robotId;}
        }
        public string RobotName 
        {
            get{return robotName;} 
            set{
                var db = Database.Open("basicData");
                robotName = value;
                db.Execute("UPDATE Robots SET RobotName = @0 WHERE RobotId = @1", value, robotId);
                db.Close();
            }
        }
        public string RobotText
        {
            get{return robotText;}
            set{
                var db = Database.Open("basicData");
                robotText = value;
                db.Execute("UPDATE Robots SET RobotText = @0 WHERE RobotId = @1", value, robotId);
                db.Close();
            }
        }
        public string CoverImage
        {
            get{return coverImage;}
            set{
                var db = Database.Open("basicData");
                string basicString = "DisplayImage?Id=";
                coverImage = basicString + value;
                db.Execute("UPDATE Robots SET RobotId = @0 WHERE RobotId = @1", coverImage, robotId);
                db.Close();
            }
        }

        public Robot(int robotId, string robotName, string robotText, string coverImage)
        {
            this.robotId = robotId;
            this.robotName = robotName;
            this.robotText = robotText;
            this.coverImage = coverImage;
        }

        //return list with photo links corresponded with this robot
        public List<string> getPhotos()
        {
            List<string> PhotoIDs = new List<string>();
            var db = Database.Open("basicData");
            var IDs = db.Query("SELECT PhotoId FROM PhotoReference WHERE RobotId = @0", robotId);
            foreach(var row in IDs)
            {
                PhotoIDs.Add("DisplayImage.cshtml?Id=" + row.PhotoId);
            }
            db.Close();
            return PhotoIDs;
        }

        //return list with photoIds for the robot
        public List<int> getPhotoIds()
        {
            List<int> idList = new List<int>();
            var db = Database.Open("basicData");
            var IDs = db.Query("SELECT PhotoId FROM PhotoReference WHERE RobotId = @0", robotId);
            foreach(var row in IDs)
            {
                idList.Add(row.PhotoId);
            }
            db.Close();
            return idList;
        }

        //return list with links to code
        public List<string[]> getCodeLinks()
        {
            List<string[]> links = new List<string[]>();
            var db = Database.Open("basicData");

            var data = db.Query("SELECT Id, link FROM CodeLinks WHERE RobotId = @0", robotId);
            foreach(var row in data)
            {
                links.Add(new string[]{Convert.ToString(row.Id), row.link});
            }

            db.Close();
            return links;
        }

        //retrun list with codesnippets
        public List<string[]> getCodeSnippets()
        {
            List<string[]> links = new List<string[]>();
            var db = Database.Open("basicData");

            var data = db.Query("SELECT Id, Text FROM CodeSnippets WHERE RobotId = @0", robotId);
            foreach(var row in data)
            {
                links.Add(new string[]{Convert.ToString(row.Id), row.Text});
            }

            db.Close();
            return links;
        }

        //return list with video links
        public List<string[]> getVideoLinks()
        {
            List<string[]> links = new List<string[]>();
            var db = Database.Open("basicData");

            var data = db.Query("SELECT Id, link FROM VideoLinks WHERE RobotId = @0", robotId);
            foreach(var row in data)
            {
                links.Add(new string[]{Convert.ToString(row.Id), row.link});
            }

            db.Close();
            return links;
        }

        //return list with 3D links
        public List<string[]> getThreeDLinks()
        {
            List<string[]> links = new List<string[]>();
            var db = Database.Open("basicData");

            var data = db.Query("SELECT Id, link FROM ThreeDFiles WHERE RobotId = @0", robotId);
            foreach(var row in data)
            {
                links.Add(new string[]{Convert.ToString(row.Id), row.link});
            }

            db.Close();
            return links;
        }

        //return parts
        public List<Part> getParts()
        {
            List<Part> partList = new List<Part>();
            var db = Database.Open("basicData");
            var partIds = db.Query("SELECT PartId FROM PartReference WHERE RobotId = @0", robotId);
            foreach(var part in partIds)
            {
                var partData = db.QuerySingle("SELECT * FROM Parts WHERE PartId = @0", part.PartId);
                partList.Add(new Part(partData.PartId, partData.PartName, partData.PartNo, Convert.ToString(partData.PhotoId)));
            }
            db.Close();
            return partList;
        }
    }

    public class Part
    {
        private int partId;
        private string partName;
        private string partNo;
        private string coverPhoto;

        public int PartId
        {
            get{return partId;}
        }
        public string PartName
        {
            get{return partName;}
            set{
                var db = Database.Open("basicData");
                partName = value;
                db.Execute("UPDATE Parts SET PartName = @0 WHERE PartId = @1", value, partId);
                db.Close();
            }
        }
        public string PartNo 
        {
            get{return partNo;}
            set{
                var db = Database.Open("basicData");
                partNo = value;
                db.Execute("UPDATE Parts SET PartNo = @0 WHERE PartId = @1", value, partId);
                db.Close();
            }
        }
        public string CoverPhoto 
        {
            get{return coverPhoto;}
            set{
                var db = Database.Open("basicData");
                string basicString = "DisplayImage?Id=";
                coverPhoto = basicString + value;
                db.Execute("UPDATE Parts SET PhotoId = @0 WHERE PartId = @1", coverPhoto, partId);
                db.Close();
            }
        }

        public Part(int partId, string partName, string partNo, string coverPhoto)
        {
            this.partId = partId;
            this.partName = partName;
            this.partNo = partNo;
            this.coverPhoto = coverPhoto;
        }

        public List<Vendor> getVendors()
        {
            List<Vendor> tempList = new List<Vendor>();
            var db = Database.Open("basicData");
            var vendorData = db.Query("SELECT * FROM Vendors WHERE PartId = @0", partId);
            foreach(var row in vendorData)
            {
                tempList.Add(new Vendor(row.VendorName, row.VendorLink, (float)row.Price, row.PartId, row.PurchaseLink, row.VendorId));
            }
            db.Close();
            return tempList;
        }

        public void addVendor(string name, string link, float price, string purchaseLink)
        {
            var db = Database.Open("basicData");
            db.Execute("INSERT INTO Vendors (VendorName, VendorLink, Price, PurchaseLink, PartId) VALUES (@0, @1, @2, @3, @4)", name, link, price, purchaseLink, partId);
            db.Close();
        }
    }

    public class Vendor
    {
        private string name;
        private string link;
        private float price;
        private int partId;
        private string purchaseLink;
        private int vendorId;

        public string Name
        {
            get{return name;}
            set{
                var db = Database.Open("basicData");
                name = value;
                db.Execute("UPDATE Vendors SET VendorName = @0 WHERE VendorId = @1", value, vendorId);
                db.Close();
            }
        }

        public string Link
        {
            get{return link;}
            set{
                var db = Database.Open("basicData");
                link = value;
                db.Execute("UPDATE Vendors SET VendorLink = @0 WHERE VendorId = @1", value, vendorId);
                db.Close();
            }
        }

        public float Price
        {
            get{return price;}
            set{
                var db = Database.Open("basicData");
                price = value;
                db.Execute("UPDATE Vendors SET Price = @0 WHERE VendorId = @1", value, vendorId);
                db.Close();
            }
        }

        public string PurchaseLink
        {
            get{return purchaseLink;}
            set{
                var db = Database.Open("basicData");
                purchaseLink = value;
                db.Execute("UPDATE Vendors SET PurchaseLink = @0 WHERE VendorId = @1", value, vendorId);
                db.Close();
            }
        }

        public int PartId
        {
            get{return partId;}
        }

        public int VendorId
        {
            get{return vendorId;}
        }



        public Vendor(string name, string link, float price, int partId, string purchaseLink, int vendorId)
        {
            this.name = name;
            this.link = link;
            this.price = price;
            this.partId = partId;
            this.purchaseLink = purchaseLink;
            this.vendorId = vendorId;
        }
    }

    public static Robot getRobot(int robotId)
    {
        var db = Database.Open("basicData");
        var robotQuery = db.QuerySingle("SELECT * FROM Robots WHERE RobotId = @0", robotId);
        if(robotQuery != null)
        {
            Robot robotObject = new Robot(robotId, robotQuery.RobotName, robotQuery.RobotText, "DisplayImage.cshtml?Id=" + robotQuery.PhotoId);
            db.Close();
            return robotObject;
        }
        db.Close();
        return null;
    }

    public static List<Robot> getLastRobots()
    {
        var db = Database.Open("basicData");
        List<Robot> robotList = new List<Robot>();
        var subQuery1 = db.QueryValue("SELECT MAX(RobotID) FROM Robots");
        var subQuery2 = db.QueryValue("SELECT MAX(RobotID) FROM Robots WHERE RobotId != @0", subQuery1);
        var robotQuery = db.Query("SELECT * FROM Robots WHERE RobotId = @0 OR RobotId = @1 ORDER BY RobotID DESC", subQuery1, subQuery2);
        foreach(var row in robotQuery)
        {
            robotList.Add(new Robot(row.RobotId, row.RobotName, row.RobotText, "DisplayImage.cshtml?Id=" + row.PhotoId));
        }
        db.Close();
        return robotList;
    }

    public static List<Robot> getAllRobots()
    {
        var db = Database.Open("basicData");
        List<Robot> robotList = new List<Robot>();
        var robotQuery = db.Query("SELECT * FROM Robots");
        foreach(var row in robotQuery)
        {
            robotList.Add(new Robot(row.RobotId, row.RobotName, row.RobotText, "DisplayImage.cshtml?Id=" + row.PhotoId));
        }
        db.Close();
        return robotList;
    }

    public static Part getPart(int partId)
    {
        var db = Database.Open("basicData");
        var partData = db.QuerySingle("SELECT * FROM Parts WHERE PartId = @0", partId);
        if(partData != null)
        {
            Part tempPart = new Part(partId, partData.PartName, partData.PartNo, "DisplayImage.cshtml?Id=" + partData.PhotoId);
            db.Close();
            return tempPart;
        }
        db.Close();
        return null;
    }

    public static List<Part> getAllParts()
    {
        var db = Database.Open("basicData");
        List<Part> partList = new List<Part>();
        var partData = db.Query("SELECT * FROM Parts");
        foreach(var row in partData)
        {
            partList.Add(new Part(row.PartId, row.PartName, row.PartNo, "DisplayImage.cshtml?Id=" + row.PhotoId));
        }
        db.Close();
        return partList;
    }

    public static string getTextElement(int elementId)
    {
        var db = Database.Open("basicData");
        var textData = db.QuerySingle("SELECT ElementText FROM TextElements WHERE ElementId = @0", elementId);
        if(textData != null)
        {
            db.Close();
            return textData.ElementText;
        }
        db.Close();
        return "";
    }
}