@using System.IO
@{
    Layout = "~/_Layout.cshtml";
    
    var robotId = "";
    var robotName = "";
    var mainPhoto = "";
    var robotText = "";
    List<string> photos = new List<string>();
    List<int> photoIds = new List<int>();
    List<string[]> codeLinks = new List<string[]>();
    List<string[]> codeSnippets = new List<string[]>();
    List<string[]> threeDLinks = new List<string[]>();
    List<string[]> videoLinks = new List<string[]>();
    List<Repository.Part> parts = new List<Repository.Part>();

    var input = "";
    var element = "";
    var elementPhoto = "";
    bool isFavourite = false;
    
    if(!Request.QueryString["ID"].IsEmpty() && Request.QueryString["ID"].IsInt()) {
        robotId = Request.QueryString["ID"];

        Repository.Robot tempRobot = Repository.getRobot(Convert.ToInt16(robotId));
        if (tempRobot != null)
        {
            robotName = tempRobot.RobotName;
            mainPhoto = tempRobot.CoverImage;
            robotText = tempRobot.RobotText;
            photos = tempRobot.getPhotos();
            photoIds = tempRobot.getPhotoIds();
            codeLinks = tempRobot.getCodeLinks();
            codeSnippets = tempRobot.getCodeSnippets();
            threeDLinks = tempRobot.getThreeDLinks();
            videoLinks = tempRobot.getVideoLinks();
            parts = tempRobot.getParts();
            isFavourite = tempRobot.isFavourite();
        }
        else
        {
            Validation.AddFormError("Robot could not be found. ");
        }
    }
    else
    {
        Validation.AddFormError("Robot could not be found");
    }


    if(IsPost && Request.Form["editMain"] != null)
    {
        Validation.RequireField("name", "You must enter a name");
        Validation.RequireField("robotText", "You must enter a description");
        
        if(Request.Form["robotName"] != null) {robotName = Request.Form["robotName"];}
        if(Request.Form["robotText"] != null) {robotText = Request.Form["robotText"];}

        if(Validation.IsValid()){
            var db = Database.Open("basicData");
            if (robotText.Length == 0)
            {
                robotText = null;
            }
            var updateCommand = "UPDATE Robots SET RobotName=@0, RobotText=@1 WHERE RobotId=@2";
            db.Execute(updateCommand, robotName, robotText, robotId);
            db.Close();
            Response.Redirect(Request.Url.AbsoluteUri);
        }
    }
    if(IsPost && Request.Form["choosePhoto"] != null)
    {
        mainPhoto = Request.Form["photo"];

        if(Validation.IsValid()){
            var db = Database.Open("basicData");
            if (mainPhoto.Length == 0)
            {
                mainPhoto = "1";
            }
            var updateCommand = "UPDATE Robots SET PhotoId=@0 WHERE RobotId=@1";
            db.Execute(updateCommand, mainPhoto, robotId);
            db.Close();
            Response.Redirect(Request.Url.AbsoluteUri);
        }
    }

    if(IsPost && Request.Form["favourite"] != null)
    {
        if(Validation.IsValid())
        {
            var db = Database.Open("basicData");
            var deleteCommand = "DELETE FROM FavouriteRobot";
            var insertCommand = "INSERT INTO FavouriteRobot (RobotId) VALUES(@0)";
            db.Execute(deleteCommand);
            db.Execute(insertCommand, robotId);
            db.Close();
            Response.Redirect(Request.Url.AbsoluteUri);
        }
    }
    if(IsPost && Request.Form["editCodeLink"] != null)
    {
        Validation.RequireField("codeLinkEdit", "Please enter something");

        input = Request.Form["codeLinkEdit"];
        element = Request.Form["element"];

        if(Validation.IsValid())
        {
            var db = Database.Open("basicData");
            var updateCommand = "UPDATE CodeLinks SET link=@0 WHERE Id=@1";
            db.Execute(updateCommand, input, element);
            db.Close();
            Response.Redirect(Request.Url.AbsoluteUri);
        }
    }
    if(IsPost && Request.Form["deleteCodeLink"] != null)
    {
        element = Request.Form["element"];

        if(Validation.IsValid())
        {
            var db = Database.Open("basicData");
            var deleteCommand = "DELETE FROM CodeLinks WHERE Id=@0";
            db.Execute(deleteCommand, element);
            db.Close();
            Response.Redirect(Request.Url.AbsoluteUri);
        }
    }
    if(IsPost && Request.Form["addCodeLink"] != null)
    {
        Validation.RequireField("codeLinkAdd", "Please enter something");
        input = Request.Form["codeLinkAdd"];

        if(Validation.IsValid())
        {
            var db = Database.Open("basicData");
            var insertCommand = "INSERT INTO CodeLinks (RobotId, link) VALUES(@0,@1)";
            db.Execute(insertCommand, robotId, input);
            db.Close();
            Response.Redirect(Request.Url.AbsoluteUri);
        }
    }


    if(IsPost && Request.Form["editCodeSnippet"] != null)
    {
        Validation.RequireField("codeSnippetEdit", "Please enter something");
        input = Request.Form["codeSnippetEdit"];
        element = Request.Form["element"];

        if(Validation.IsValid())
        {
            var db = Database.Open("basicData");
            var updateCommand = "UPDATE CodeSnippets SET Text=@0 WHERE Id=@1";
            db.Execute(updateCommand, input, element);
            db.Close();
            Response.Redirect(Request.Url.AbsoluteUri);
        }
    }
    if(IsPost && Request.Form["deleteCodeSnippet"] != null)
    {
        element = Request.Form["element"];

        if(Validation.IsValid())
        {
            var db = Database.Open("basicData");
            var deleteCommand = "DELETE FROM CodeSnippets WHERE Id=@0";
            db.Execute(deleteCommand, element);
            db.Close();
            Response.Redirect(Request.Url.AbsoluteUri);
        }
    }
    if(IsPost && Request.Form["addCodeSnippet"] != null)
    {
        Validation.RequireField("codeSnippetAdd", "Please enter something");

        input = Request.Form["codeSnippetAdd"];
        if(Validation.IsValid())
        {
            var db = Database.Open("basicData");
            var insertCommand = "INSERT INTO CodeSnippets (RobotId, Text) VALUES(@0,@1)";
            db.Execute(insertCommand, robotId, input);
            db.Close();
            Response.Redirect(Request.Url.AbsoluteUri);
        }
    }


    if(IsPost && Request.Form["editThreeDLink"] != null)
    {
        Validation.RequireField("threeDLinkEdit", "Please enter something");
        input = Request.Form["threeDLinkEdit"];
        element = Request.Form["element"];

        if(Validation.IsValid())
        {
            var db = Database.Open("basicData");
            var updateCommand = "UPDATE ThreeDFiles SET link=@0 WHERE Id=@1";
            db.Execute(updateCommand, input, element);
            db.Close();
            Response.Redirect(Request.Url.AbsoluteUri);
        }
    }
    if(IsPost && Request.Form["deleteThreeDLink"] != null)
    {
        element = Request.Form["element"];

        if(Validation.IsValid())
        {
            var db = Database.Open("basicData");
            var deleteCommand = "DELETE FROM ThreeDFiles WHERE Id=@0";
            db.Execute(deleteCommand, element);
            db.Close();
            Response.Redirect(Request.Url.AbsoluteUri);
        }
    }
    if(IsPost && Request.Form["addThreeDLink"] != null)
    {
        Validation.RequireField("threeDLinkAdd", "Please enter something");
        input = Request.Form["threeDLinkAdd"];

        if(Validation.IsValid())
        {
            var db = Database.Open("basicData");
            var insertCommand = "INSERT INTO ThreeDFiles (RobotId, link) VALUES(@0,@1)";
            db.Execute(insertCommand, robotId, input);
            db.Close();
            Response.Redirect(Request.Url.AbsoluteUri);
        }
    }


    if(IsPost && Request.Form["editVideoLink"] != null)
    {
        Validation.RequireField("videoLinkEdit", "Please enter something");

        input = Request.Form["videoLinkEdit"];
        element = Request.Form["element"];

        if(Validation.IsValid())
        {
            var db = Database.Open("basicData");
            var updateCommand = "UPDATE VideoLinks SET link=@0 WHERE Id=@1";
            db.Execute(updateCommand, input, element);
            db.Close();
            Response.Redirect(Request.Url.AbsoluteUri);
        }
    }
    if(IsPost && Request.Form["deleteVideoLink"] != null)
    {
        element = Request.Form["element"];

        if(Validation.IsValid())
        {
            var db = Database.Open("basicData");
            var deleteCommand = "DELETE FROM VideoLinks WHERE Id=@0";
            db.Execute(deleteCommand, element);
            db.Close();
            Response.Redirect(Request.Url.AbsoluteUri);
        }
    }
    if(IsPost && Request.Form["addVideoLink"] != null)
    {
        Validation.RequireField("videoLinkAdd", "Please enter something");
        input = Request.Form["videoLinkAdd"];

        if(Validation.IsValid())
        {
            var db = Database.Open("basicData");
            var insertCommand = "INSERT INTO VideoLinks (RobotId, link) VALUES(@0,@1)";
            db.Execute(insertCommand, robotId, input);
            db.Close();
            Response.Redirect(Request.Url.AbsoluteUri);
        }
    }


    if(IsPost && Request["deletePhoto"] != null)
    {
        element = Request.Form["element"];

        if(Validation.IsValid() && element != "1")
        {
            var db = Database.Open("basicData");
            var deleteCommand = "DELETE FROM Photos WHERE PhotoId=@0";
            var deleteCommand2 = "DELETE FROM PhotoReference WHERE PhotoId=@0";
            db.Execute(deleteCommand2, element);
            db.Execute(deleteCommand, element);
            db.Close();
            Response.Redirect(Request.Url.AbsoluteUri);
        }
    }
    Page.Title = String.Format("Edit {0}", robotName);
}



<div class="col-md-12">
<h1>Edit robot</h1>
<div class="col-xs-6 col-sm-2">
    <a href="~/Robot?Id=@robotId" class="btn btn-primary btn-block floatBtn"><span class="glyphicon glyphicon-arrow-left"></span> Back</a>
</div>
<br/>
<br/>
<span id="required">* Required Fields</span>
    <form method="post" class="form-inline"> @* mist nog form ID *@
        <fieldset>
            @AntiForgery.GetHtml()
            @Html.ValidationSummary("Login was unsuccessful. Please correct the errors and try again", excludeFieldErrors: true, htmlAttributes: null)
            <div class="form-group">
                <label for="robotName"><span class="glyphicon glyphicon-tag"></span>&nbsp;Name*</label>
                <br/>
                <input type="text" id="name" name="name" value="@robotName" class="form-control" placeholder="Enter the name of the robot">
                @Html.ValidationMessage("name")
            </div>
        </fieldset>
        <fieldset>
            <div class="form-group">
                <label for="robotText"><span class="glyphicon glyphicon-pencil"></span>&nbsp;Description*</label></br>
                <textarea onkeyup="textCounter(this, 'descCounter',4000);" id="robotText" name="robotText" class="form-control col-md-12" rows="8" cols="50" placeholder="Provide a description for the robot" maxlength="4000">@robotText</textarea>
                <br/>
                <input class="counter" disabled value="4000 characters left" id="descCounter">
                @*<textarea id="robotDescription" name="robotDescription" class="form-control">@robotDescription</textarea>*@
                    @Html.ValidationMessage("robotText")
            </div>
            </fieldset><br><fieldset>
            <button type="submit" id="editMain" name="editMain" class="btn btn-default">
                <span class="glyphicon glyphicon-ok"></span> Save Changes
            </button>
        </fieldset>
        </form><br>
        <form method="post">
          <fieldset>
            <label>Pick a cover image</label></br>
            <button type="button" class="btn btn-info" data-toggle="collapse" data-target="#PhotoToggle">Toggle photos</button>
            <div id="PhotoToggle" class="collapse">
                @foreach (var photo in photos)
                {
                    <label class="radio-inline">
                        @if(photo == mainPhoto)
                        {
                             <input type="radio" id="photo" name="photo" value="@photo.Substring(23)" checked class="form-control">
                        }
                        else
                        {
                            <input type="radio" id="photo" name="photo" value="@photo.Substring(23)" class="form-control">
                        }
                        <span><img src="~/@photo" alt="photo" /></span>
                        </label>
                }<br>
                <button type="submit" id="choosePhoto" name="choosePhoto" class="btn btn-success">
                    <span class="glyphicon glyphicon-ok"></span> Choose Photo
                </button>
            </div>
            
        </fieldset>
       </form>
    <label>Choose Photos for this robot</label></br>

    <a href="/Admin/Tools/PhotoGallery?Id=@robotId" class="btn btn-default">
    <span class="glyphicon glyphicon-picture"></span> Edit Photos</a></br>
    <label>Make this robot your favourite!</label></br>
                @if(isFavourite)
                {
                    <p>This robot is already your favourite.</p><br>
                }
                else
                {
                    <form method="post" class="form-inline">
                        <fieldset>
                            <button type="submit" id="submit" name="favourite" value="Favourite" class="btn btn-warning">
                                <span class="glyphicon glyphicon-star"></span> Favourite
                            </button>
                        </fieldset>
                    </form>
                }

    <label>View parts for this robot</label></br>
    <p>@parts.Count Part(s) have been added</p>
    <a href="~/Admin/Tools/Viewparts?Id=@robotId" class="btn btn-primary">
        <span class="glyphicon glyphicon-list"></span> Edit Parts
    </a>

    <h2><span class="glyphicon glyphicon-link"></span> Links</h2>
    <ul class="nav nav-tabs">
        <li class="active"><a data-toggle="tab" href="#Link_plus">+</a></li>
        @for (int i = 1; i <= codeLinks.Count; i++)
        {
            <li><a data-toggle="tab" href="#Link_@i">@i</a></li>
        }
    </ul>

    <div class="tab-content">
        <div id="Link_plus" class="tab-pane fade in active">
            <form method="post" class="form-inline"><br>
                @AntiForgery.GetHtml()
               <div class="form-group">
                    <input type="text" id="codeLinkAdd" name="codeLinkAdd" value="" class="form-control" placeholder="e.g. https://github.com/username/repository">
                    <button type="submit" id="submit" name="addCodeLink" class="btn btn-success">
                        <span class="glyphicon glyphicon-plus"></span> Add
                    </button>
                    @Html.ValidationMessage("linkAdd")
                </div>
            </form>
        </div>
        @for (int i = 1; i <= codeLinks.Count; i++)
            {
                <div id="Link_@i" class="tab-pane fade">
                    <form method="post" class="form-inline"><br>
                            <input type="text" id="codeLinkEdit" name="codeLinkEdit" value="@codeLinks[i-1][1]" class="form-control" placeholder="e.g. https://github.com/username/repository">
                            <input type="hidden" name="element" value="@codeLinks[i-1][0]">
                            <input type="submit" id="submit" name="editCodeLink" value="Edit" class="btn btn-primary">
                            <button type="submit" id="submit" name="deleteCodeLink"class="btn btn-danger">
                                <span class="glyphicon glyphicon-remove"></span> Delete
                            </button>
                    </form><br>
                </div>
            }
    <h2><span class="glyphicon glyphicon-font"></span> snippets</h2>
    <ul class="nav nav-tabs">
        <li class="active"><a data-toggle="tab" href="#Snippet_plus">+</a></li>
        @for (int i = 1; i <= codeSnippets.Count; i++)
        {
            <li><a data-toggle="tab" href="#Snippet_@i">@i</a></li>
        }
    </ul>

    <div class="tab-content">
        <div id="Snippet_plus" class="tab-pane fade in active">
            <form method="post" class="form-inline"><br>
                @AntiForgery.GetHtml()
                @Html.ValidationSummary("Login was unsuccessful. Please correct the errors and try again", excludeFieldErrors: true, htmlAttributes: null)
                <div class="form-group">
                    <textarea onkeyup="textCounter(this, 'snipCounter',4000);" id="codeSnippetAdd" name="codeSnippetAdd" class="form-control col-md-12" rows="8" cols="50" placeholder="Provide a code snippet for the robot" maxlength="4000"></textarea>
                    <br/>
                    <input class="counter" disabled value="4000 characters left" id="snipCounter">
                    <br/>
                    <button type="submit" id="submit" name="addCodeSnippet"class="btn btn-success">
                       <span class="glyphicon glyphicon-plus"></span> Add
                   </button>
                    @Html.ValidationMessage("snippetAdd")
                </div>
            </form>
        </div>
        @for (int i = 1; i <= codeSnippets.Count; i++)
            {
                <div id="Snippet_@i" class="tab-pane fade">
                    <form method="post" class="form-inline"><br>
                        <div class="form-group">
                            <textarea onkeyup="textCounter(this, 'snipCounter_@i',4000);" id="codeSnippetEdit" name="codeSnippetEdit" class="form-control col-md-12" cols="50" rows="8" placeholder="Provide a code snippet for the robot" maxlength="4000">@codeSnippets[i-1][1]</textarea>
                            <br/>
                            <input class="counter" disabled value="4000 characters left" id="snipCounter_@i">
                            <br/>
                            <input type="hidden" name="element" value="@codeSnippets[i-1][0]">
                            <input type="submit" id="submit" name="editCodeSnippet" value="Edit" class="btn btn-primary">
                            <button type="submit" id="submit" name="deleteCodeSnippet"class="btn btn-danger">
                                <span class="glyphicon glyphicon-remove"></span> Delete
                            </button>
                        </div>
                    </form><br>
                </div>
            }



        <h2><span class="glyphicon glyphicon-link"></span> 3D links</h2>
        <ul class="nav nav-tabs">
            <li class="active"><a data-toggle="tab" href="#ThreeD_plus">+</a></li>
            @for (int i = 1; i <= threeDLinks.Count; i++)
            {
                <li><a data-toggle="tab" href="#ThreeD_@i">@i</a></li>
            }
        </ul>

        <div class="tab-content">
            <div id="ThreeD_plus" class="tab-pane fade in active">
                <form method="post" class="form-inline"><br>
                    @AntiForgery.GetHtml()
                    @Html.ValidationSummary("Login was unsuccessful. Please correct the errors and try again", excludeFieldErrors: true, htmlAttributes: null)
                    <div class="form-group">
                        <input type="text" id="threeDLinkAdd" name="threeDLinkAdd" value="" class="form-control" placeholder="e.g. https://360.autodesk.com/ViewerPage?id=abCdeFghijKlMnoP">
                        <button type="submit" id="submit" name="addThreeDLink" class="btn btn-success">
                        <span class="glyphicon glyphicon-plus"></span> Add
                    </button>
                        @Html.ValidationMessage("threeDAdd")
                    </div>
                </form>
            </div>
            @for (int i = 1; i <= threeDLinks.Count; i++)
                {
                    <div id="ThreeD_@i" class="tab-pane fade">
                        <form method="post" class="form-inline"><br>
                            <div class="form-group">
                                <input type="text" id="threeDLinkEdit" name="threeDLinkEdit" value="@threeDLinks[i-1][1]" class="form-control" placeholder="e.g. https://360.autodesk.com/ViewerPage?id=abCdeFghijKlMnoP">
                                <input type="hidden" name="element" value="@threeDLinks[i-1][0]">
                                <input type="submit" id="submit" name="editThreeDLink" value="Edit" class="btn btn-primary">
                                <button type="submit" id="submit" name="deleteThreeDLink"class="btn btn-danger">
                                    <span class="glyphicon glyphicon-remove"></span> Delete
                                </button>
                            </div>
                        </form><br>
                    </div>
                }
        </div>


        <h2><span class="glyphicon glyphicon-film"></span> Video links</h2>
        <ul class="nav nav-tabs">
            <li class="active"><a data-toggle="tab" href="#Video_plus">+</a></li>
            @for (int i = 1; i <= videoLinks.Count; i++)
            {
                <li><a data-toggle="tab" href="#Video_@i">@i</a></li>
            }
        </ul>

        <div class="tab-content">
            <div id="Video_plus" class="tab-pane fade in active">
                <form method="post" class="form-inline"><br>
                    @AntiForgery.GetHtml()
                    @Html.ValidationSummary("Login was unsuccessful. Please correct the errors and try again", excludeFieldErrors: true, htmlAttributes: null)
                    <div class="form-group">
                        <input type="text" id="videoLinkAdd" name="videoLinkAdd" value="" class="form-control" placeholder="e.g. https://youtube.com/embed/abCdeFg-123">
                        <button type="submit" id="submit" name="addVideoLink" class="btn btn-success">
                        <span class="glyphicon glyphicon-plus"></span> Add
                        </button>
                        @Html.ValidationMessage("videoAdd")
                    </div>
                </form>
            </div>
            @for (int i = 1; i <= videoLinks.Count; i++)
                {
                    <div id="Video_@i" class="tab-pane fade">
                        <form method="post" class="form-inline"><br>
                            <div class="form-group">
                                <input type="text" id="videoLinkEdit" name="videoLinkEdit" value="@videoLinks[i-1][1]" class="form-control" placeholder="e.g. https://youtube.com/embed/abCdeFg-123">
                                <input type="hidden" name="element" value="@videoLinks[i-1][0]">
                                <input type="submit" id="submit" name="editVideoLink" value="Edit" class="btn btn-primary">
                                <button type="submit" id="submit" name="deleteVideoLink"class="btn btn-danger">
                                    <span class="glyphicon glyphicon-remove"></span> Delete
                                </button>
                            </div>
                        </form><br>
                    </div>}
            </div>
        </div>
    </div>
</div>
                <script>
                function textCounter(field,field2,maxlimit)
                {
                 var countfield = document.getElementById(field2);
                 if ( field.value.length > maxlimit ) {
                  field.value = field.value.substring( 0, maxlimit );
                  return false;
                 } else {
                  countfield.value = maxlimit - field.value.length + " characters left";
                 }
                }
                </script>