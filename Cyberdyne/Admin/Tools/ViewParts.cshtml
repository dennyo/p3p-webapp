@{
    Layout = "~/_Layout.cshtml";
    Page.Title = "Edit Parts";

    var db = Database.Open("basicData");

    var RobotId = Request.QueryString["Id"];

    List<Repository.Part> parts = Repository.getAllParts();
    var partName = "";
    string message = "";
    bool isRobot = false;

    if(!RobotId.IsEmpty() && RobotId.IsInt())
    {
        var queryData = db.QuerySingle("SELECT RobotId FROM Robots WHERE RobotId = @0", RobotId);
        if(queryData != null)
        {
            isRobot = true;
        }
    }

    if(IsPost && Request.Form["submitItem"] != null)
    {
        AntiForgery.Validate();
        Validation.RequireField("partName", "You have to enter a name for the part you're about to add");
        Validation.Add("partName",
            Validator.StringLength(
                maxLength: 400,
                minLength: 1,
                errorMessage: "The name cannot contain more then 400 caracters"
            )
        );
        partName = Request.Form["partName"];
        if(Validation.IsValid())
        {
            var part = db.QuerySingle("SELECT * FROM Parts WHERE PartName = @0", partName);

            if(part == null)
            {
                db.Execute("INSERT INTO Parts (PartName, PhotoId) VALUES (@0, 1)", partName);  
            }
            else
            {
                message = "This part already exists"; 
            }
        }
        db.Close();
        Response.Redirect(Request.Url.AbsoluteUri);
    }

    if(IsPost && Request.Form["removeItem"] != null)
    {
        AntiForgery.Validate();
        string removeItemId = Request.Form["itemIdRemove"];
        var item = db.QuerySingle("SELECT PartId FROM Parts", removeItemId);
        if(item != null)
        {
            db.Execute("DELETE FROM PartReference WHERE PartId = @0", removeItemId);
            db.Execute("DELETE FROM Vendors WHERE PartId = @0", removeItemId);
            var photoId = db.QueryValue("SELECT PhotoId FROM Parts WHERE PartId = @0", removeItemId);
            db.Execute("DELETE FROM Parts WHERE PartId = @0", removeItemId);
            if(photoId != 1)
            {
                db.Execute("DELETE FROM Photos WHERE PhotoId = @0", photoId);
            }
            db.Close();
            Response.Redirect(Request.Url.AbsoluteUri);
        }
        else
        {
            ModelState.AddFormError("This Item does not exist in your list");
        }
    }

    if(IsPost && (Request.Form["addToRobot"] != null || Request.Form["removeFromRobot"] != null))
    {
        var tempId = Request.Form["selectedItemId"];

        if(Request.Form["addToRobot"] != null)
        {
            db.Execute("INSERT INTO PartReference (PartId, RobotId) VALUES (@0, @1)", tempId, RobotId);
        }
        else
        {
            db.Execute("DELETE FROM PartReference WHERE PartId = @0 AND RobotId = @1", tempId, RobotId);
        }
    }
    db.Close();
}

<div class="col-md-12">
    <br>
        @if(isRobot)
        {
            <div class="col-xs-6 col-sm-2">
                <a href="~/Admin/Tools/EditRobot?Id=@RobotId" class="btn btn-primary btn-block floatBtn"><span class="glyphicon glyphicon-arrow-left"></span> Back</a>
            </div> 
            <div class="col-xs-6  col-sm-offset-8 col-sm-2 floatBtn">
                <a href="@Request.Url.AbsoluteUri" class="btn btn-success btn-block"><span class="glyphicon glyphicon-refresh"></span></a>
            </div>
        }
        else
        {    
            <div class="col-xs-6 col-xs-offset-6 col-sm-offset-10 col-sm-2 floatBtn">
                <a href="@Request.Url.AbsoluteUri" class="btn btn-success btn-block"><span class="glyphicon glyphicon-refresh"></span></a>
            </div>
        }
    <div class="col-md-12" style="clear: both">
        <form method="post">
            @Html.ValidationSummary("there are some errors", excludeFieldErrors: true, htmlAttributes: null)
            @AntiForgery.GetHtml()
            <h1>Add Part</h1>
            <div class="form-group">
                <label for="partName">Name:</label>
                <input type="text" id="partName" name="partName" value="@partName" class="form-control">
            </div>
            @if(!message.IsEmpty())
            {
                <text>@message</text> 
            }
            <div class="form-group">
                <button type="submit" name="submitItem" class="btn btn-default"><span class="glyphicon glyphicon-plus"></span> Add Part</button>
            </div>
        </form>
        <h2>Parts</h2>
        <div class="well">
            @foreach(Repository.Part part in parts)
            { 
                <div class="row"> 
                    <div class="col-xs-12 col-md-2 col-sm-4">Name: @part.PartName</div>
                    <div class="col-xs-12 col-md-2 col-sm-4">Prices: @Repository.getPart(part.PartId).getVendors().Count</div>
                    @if(isRobot)
                    {
                        <div class="col-xs-12 col-md-2 col-sm-4">Quantity: @part.getQuantity(Convert.ToInt32(RobotId))</div>
                    }
                    @if(isRobot)
                    {                            
                        <div class="col-md-2 col-xs-12 col-sm-4">
                            <form method="post" id="addRemove">
                            @{
                                var data = Database.Open("basicData");
                                var queryData = db.QuerySingle("SELECT PartId FROM PartReference WHERE PartId = @0 AND RobotId = @1", part.PartId, RobotId);
                                data.Close();
                                if(queryData == null)
                                {
                                    <button type="submit" name="addToRobot" class="btn btn-success editBtn">
                                    <span class="glyphicon glyphicon-plus"></span> Add to robot
                                    </button>
                                    <input type="hidden" name="selectedItemId" value="@part.PartId">
                                }
                                else
                                {
                                    <button type="submit" name="removeFromRobot" class="btn btn-primary editBtn">
                                        <span class="glyphicon glyphicon-remove"></span> Remove from robot
                                    </button>
                                    <input type="hidden" name="selectedItemId" value="@part.PartId">
                                }
                             }
                            </form>
                        </div>   
                    } 
                    @if(isRobot)
                    {
                         <div class="col-md-2 col-xs-12 col-sm-4">
                            <a href="Editpart?id=@part.PartId&RobotId=@RobotId" class="btn btn-warning editBtn"><span class="glyphicon glyphicon-wrench"></span> Edit</a>
                        </div>   
                    }
                    else
                    {
                        <div class="col-md-2 col-xs-12 col-sm-4 col-md-offset-2">
                            <a href="Editpart?id=@part.PartId" class="btn btn-warning editBtn"><span class="glyphicon glyphicon-wrench"></span> Edit</a>
                        </div>      
                    }                        
                    <div class="col-md-2 col-xs-12 col-sm-4">
                        <form method="post">
                            @AntiForgery.GetHtml()
                            <button type="submit" name="removeItem" class="btn btn-danger editBtn">
                                <span class="glyphicon glyphicon-remove"></span> Delete part
                            </button>
                            <input type="hidden" name="itemIdRemove" value="@part.PartId"> 
                         </form>
                    </div>       
              </div>
            }
        </div>
    </div>
</div>
