@{
    Layout = "~/_Layout.cshtml";
    Page.Title = "Edit Parts";

    var db = Database.Open("basicData");

    var RobotId = Request.QueryString["Id"];
    string message = "";
    var hostUrl = Request.Url.GetComponents(UriComponents.SchemeAndServer, UriFormat.Unescaped);

    var partData = db.Query("SELECT * FROM Parts");
    var grid = new WebGrid(source: partData, rowsPerPage: 50);

    var partName = "";

    if(IsPost && Request.Form["submitItem"] != null)
    {
        AntiForgery.Validate();
        Validation.RequireField("partName", "You have to enter a name for the part you're about to add");
        partName = Request.Form["partName"];
        db.Execute("INSERT INTO Parts (PartName, PhotoId) VALUES (@0, 1)", partName);
        db.Close();
        Response.Redirect(Request.Url.AbsoluteUri);
    }

    if(IsPost && Request.Form["removeItem"] != null)
    {
        AntiForgery.Validate();
        string removeItemId = Request.Form["itemIdRemove"];
        var item = db.QuerySingle("SELECT PartId FROM Parts", removeItemId);
        if(item != null)
        {
            db.Execute("DELETE FROM PartReference WHERE PartId = @0", removeItemId);
            db.Execute("DELETE FROM Vendors WHERE PartId = @0", removeItemId);
            var photoId = db.QueryValue("SELECT PhotoId FROM Parts WHERE PartId = @0", removeItemId);
            db.Execute("DELETE FROM Photos WHERE PhotoId = @0", photoId);
            db.Execute("DELETE FROM Parts WHERE PartId = @0", removeItemId);
            db.Close();
            Response.Redirect(Request.Url.AbsoluteUri);
        }
        else
        {
            ModelState.AddFormError("This Item does not exist in your list");
        }
    }

    if(IsPost && Request.Form["editItem"] != null)
    {
        AntiForgery.Validate();
        string editItemId = Request.Form["itemIdEdit"];
        db.Close();
        Response.Redirect("~/Admin/Tools/EditPart?Id=" + editItemId);
    }
    db.Close();
}

<div class="container">
    <br>
    <div class="row">
        <div class="col-xs-2 col-xs-offset-10">
            <a href="@Request.Url.AbsoluteUri" class="btn btn-success btn-block"><span class="glyphicon glyphicon-refresh"></span></a>
        </div>
    </div>
    <br>
    <div class="row">
        <form method="post" class="form-inline">
            <fieldset>
                @AntiForgery.GetHtml()
                @if(!message.IsEmpty())
                {
                    <p>@message</p>
                }
                <legend>Add Item to list</legend>
                @Html.ValidationSummary()
                <div class="form-group">
                    <label for="partName">Name:</label>
                    <input type="text" id="partName" name="partName" value="@partName" class="form-control">
                </div>
                <div class="form-group">
                    <button type="submit" name="submitItem" class="btn btn-default"><span class="glyphicon glyphicon-plus"></span> Add Part</button>
                </div>
            </fieldset>
        </form>
    </div>
    <br>
    <div class="row well">
        <div class="row">
            @grid.GetHtml(
                tableStyle: "table table-striped table-responsive",
                headerStyle: "tableHeader",
                columns: grid.Columns(
                    grid.Column(format: @<form method="post">
                                            @AntiForgery.GetHtml()
                                            <button type="submit" name="editItem" class="btn btn-warning">
                                                <span class="glyphicon glyphicon-pencil"></span> Edit
                                            </button>
                                            <input type="hidden" name="itemIdEdit" value="@item.PartId">
                                        </form>),
                    grid.Column(columnName: "PartName", header: "Part Name", canSort: false),
                    grid.Column(format: @<form method="post">
                                            @AntiForgery.GetHtml()
                                            <button type="submit" name="removeItem" class="btn btn-danger">
                                                <span class="glyphicon glyphicon-remove"></span> Remove
                                            </button>
                                            <input type="hidden" name="itemIdRemove" value="@item.PartId"> 
                                        </form>)
                )
            )
        </div>
    </div>
</div>