@{
    Layout = "~/_Layout.cshtml";
    Page.Title = "Edit Parts";

    var db = Database.Open("basicData");

    var RobotId = Request.QueryString["Id"];

    string message = "";
    var hostUrl = Request.Url.GetComponents(UriComponents.SchemeAndServer, UriFormat.Unescaped);

    var partData = db.Query("SELECT * FROM Parts");
    var grid = new WebGrid(source: partData, rowsPerPage: 50);

    var partName = "";
    bool isRobot = false;

    if(!RobotId.IsEmpty() && RobotId.IsInt())
    {
        var queryData = db.QuerySingle("SELECT RobotId FROM Robots WHERE RobotId = @0", RobotId);
        if(queryData != null)
        {
            isRobot = true;
        }
    }

    if(IsPost && Request.Form["submitItem"] != null)
    {
        AntiForgery.Validate();
        Validation.RequireField("partName", "You have to enter a name for the part you're about to add");
        partName = Request.Form["partName"];
        db.Execute("INSERT INTO Parts (PartName, PhotoId) VALUES (@0, 1)", partName);
        db.Close();
        Response.Redirect(Request.Url.AbsoluteUri);
    }

    if(IsPost && Request.Form["removeItem"] != null)
    {
        AntiForgery.Validate();
        string removeItemId = Request.Form["itemIdRemove"];
        var item = db.QuerySingle("SELECT PartId FROM Parts", removeItemId);
        if(item != null)
        {
            db.Execute("DELETE FROM PartReference WHERE PartId = @0", removeItemId);
            db.Execute("DELETE FROM Vendors WHERE PartId = @0", removeItemId);
            var photoId = db.QueryValue("SELECT PhotoId FROM Parts WHERE PartId = @0", removeItemId);
            db.Execute("DELETE FROM Parts WHERE PartId = @0", removeItemId);
            if(photoId != 1)
            {
                db.Execute("DELETE FROM Photos WHERE PhotoId = @0", photoId);
            }
            db.Close();
            Response.Redirect(Request.Url.AbsoluteUri);
        }
        else
        {
            ModelState.AddFormError("This Item does not exist in your list");
        }
    }

    if(IsPost && Request.Form["editItem"] != null)
    {
        AntiForgery.Validate();
        string editItemId = Request.Form["itemIdEdit"];
        db.Close();
        Response.Redirect("~/Admin/Tools/EditPart?Id=" + editItemId);
    }
    if(IsPost && (Request.Form["addToRobot"] != null || Request.Form["removeFromRobot"] != null))
    {
        var tempId = Request.Form["selectedItemId"];

        if(Request.Form["addToRobot"] != null)
        {
            db.Execute("INSERT INTO PartReference (PartId, RobotId) VALUES (@0, @1)", tempId, RobotId);
        }
        else
        {
            db.Execute("DELETE FROM PartReference WHERE PartId = @0 AND RobotId = @1", tempId, RobotId);
        }
    }
    db.Close();
}

<div class="col-md-12">
    <br>
        @if(isRobot)
        {
            <div class="col-xs-2">
                <a href="~/Admin/Tools/EditRobot?Id=@RobotId" class="btn btn-primary btn-block"><span class="glyphicon glyphicon-arrow-left"></span> Back</a>
            </div>
            <div class="col-xs-2 col-xs-offset-8">
                <a href="@Request.Url.AbsoluteUri" class="btn btn-success btn-block"><span class="glyphicon glyphicon-refresh"></span></a>
            </div>   
        }
        else
        {
            <div class="col-xs-2 col-xs-offset-10">
                <a href="@Request.Url.AbsoluteUri" class="btn btn-success btn-block"><span class="glyphicon glyphicon-refresh"></span></a>
            </div>
        }
    <div class="col-md-12">
        <form method="post">
            <fieldset>
                @AntiForgery.GetHtml()
                @if(!message.IsEmpty())
                {
                    <p>@message</p>
                }
                <h1>Add Item to list</h1>
                @Html.ValidationSummary()
                <div class="form-group">
                    <label for="partName">Name:</label>
                    <input type="text" id="partName" name="partName" value="@partName" class="form-control">
                </div>
                <div class="form-group">
                    <button type="submit" name="submitItem" class="btn btn-default"><span class="glyphicon glyphicon-plus"></span> Add Part</button>
                </div>
            </fieldset>
        </form>
    <br>
    <div class="well">
            @grid.GetHtml(
                tableStyle: "table table-responsive",
                headerStyle: "tableHeader",
                columns: grid.Columns(
                    grid.Column(header: isRobot ? "Add/Remove from Robot": "", format: @<form method="post">
                                            @if(isRobot)
                                            {
                                                var data = Database.Open("basicData");
                                                var queryData = db.QuerySingle("SELECT PartId FROM PartReference WHERE PartId = @0 AND RobotId = @1", item.PartId, RobotId);
                                                data.Close();
                                                if(queryData == null)
                                                {
                                                    <button type="submit" name="addToRobot" class="btn btn-primary">
                                                        <span class="glyphicon glyphicon-ok"></span>
                                                    </button>
                                                    <input type="hidden" name="selectedItemId" value="@item.PartId">
                                                }
                                                else
                                                {
                                                    <button type="submit" name="removeFromRobot" class="btn btn-danger">
                                                        <span class="glyphicon glyphicon-remove"></span>
                                                    </button>
                                                    <input type="hidden" name="selectedItemId" value="@item.PartId">
                                                }
                                            }
                                        </form>),
                    grid.Column(format: @<form method="post">
                                            @AntiForgery.GetHtml()
                                            <button type="submit" name="editItem" class="btn btn-warning">
                                                <span class="glyphicon glyphicon-wrench"></span> Edit
                                            </button>
                                            <input type="hidden" name="itemIdEdit" value="@item.PartId">
                                        </form>),
                    grid.Column(columnName: "PartName", header: "Part Name", canSort: false),
                    grid.Column(header: "Prices", format: @<text>@Repository.getPart(item.PartId).getVendors().Count</text>),
                    grid.Column(format: @<form method="post">
                                            @AntiForgery.GetHtml()
                                            <button type="submit" name="removeItem" class="btn btn-danger">
                                                <span class="glyphicon glyphicon-remove"></span> Remove
                                            </button>
                                            <input type="hidden" name="itemIdRemove" value="@item.PartId"> 
                                        </form>)
                )
            )
        </div>
    </div>
</div>