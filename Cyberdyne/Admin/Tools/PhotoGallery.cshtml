@{
    Layout = "~/_Layout.cshtml";

    Page.Title = "Photos";

    List<int> photos = Repository.getAllPhotos();
    bool isRobot = false;
    Repository.Robot robot = new Repository.Robot(0, "", "", 1);

    int robotId = Request.QueryString["Id"].AsInt();
    bool editCoverImage = Request.QueryString["CIEdit"].AsBool();

    if(robotId != 0)
    {
        if(Repository.getRobot(robotId) != null)
        {
            isRobot = true;
            robot = Repository.getRobot(robotId);
        }
    }

    if(IsPost && Request.Form["toggleCoverEdit"] != null && isRobot)
    {
        editCoverImage = !editCoverImage;
        Response.Redirect(string.Format("/Admin/Tools/PhotoGallery?Id={0}&CIEdit={1}", robotId, editCoverImage));
    }

    if(IsPost && Request.Form["addPhoto"] != null && isRobot)
    {
        AntiForgery.Validate();
        if(Validation.IsValid())
        {
            var photoId = Request.Form["PhotoId"].AsInt();
            if(Request.Form["robotState"].AsBool())
            {
                //remove Photo from robot 
                robot.removePhoto(photoId);
            }
            else
            {
                //add photo to robot
                robot.addPhoto(photoId);
            }
            Response.Redirect(Request.Url.AbsoluteUri);   
        }
    }

    if(IsPost && Request.Form["addCover"] != null && isRobot && editCoverImage)
    {
        AntiForgery.Validate();
        if(Validation.IsValid())
        {
            var photoId = Request.Form["PhotoId"].AsInt();
            if(Request.Form["coverState"].AsBool())
            {
                robot.CoverImage = 1;
            }
            else
            {
                robot.CoverImage = photoId;
                robot.addPhoto(photoId);
            }
            Response.Redirect(Request.Url.AbsoluteUri);
        }
    }

    if(IsPost && Request.Form["removePhoto"] != null)
    {
        AntiForgery.Validate();
        if(Validation.IsValid())
        {
            var photoId = Request.Form["PhotoId"].AsInt();
            var db = Database.Open(App.DataBase);
            var photo = db.QuerySingle("SELECT PhotoId FROM Photos WHERE PhotoId = @0", photoId);
            if(photos != null)
            {
                db.Execute("UPDATE Robots SET PhotoId = 1 WHERE PhotoId = @0", photoId);
                db.Execute("DELETE FROM PhotoReference WHERE PhotoId = @0 AND PhotoId != 1", photoId);
                db.Execute("DELETE FROM Photos WHERE PhotoId = @0 AND PhotoId != 1", photoId);
                db.Close();
                Response.Redirect(Request.Url.AbsoluteUri);
            }

            db.Close();
        }
    }

    if(IsPost && Request.Form["addPhoto"] != null)
    {
        if(Request.Files[0].FileName == string.Empty){Validation.AddFormError("You must attach at least one image");}
        else
        {
            if(!Request.Files[0].ContentType.StartsWith("image")){Validation.AddFormError("The given file is not an image");}
            if(Request.Files[0].ContentLength > 4000000){Validation.AddFormError("The file cannot exceed 4MB");}   
        }
        if(Validation.IsValid())
        {
            var db = Database.Open(App.DataBase);
            for(int imageCount = 0; imageCount < Request.Files.Count; imageCount++)
            {
                var uploadedFile = Request.Files[imageCount];
                var fileName = Path.GetFileName(uploadedFile.FileName);
                if(fileName != String.Empty)
                {
                    var fileType = uploadedFile.ContentType;
                    if(fileType.StartsWith("image"))
                    {
                        var fileStream = uploadedFile.InputStream;
                        var fileLength = uploadedFile.ContentLength;
                        if(fileLength <= 4000000)
                        {
                            byte[] fileContent = new byte[fileLength];
                            fileStream.Read(fileContent, 0, fileLength);
                            db.Execute("INSERT INTO Photos (Photo, MimeType) VALUES (@0, @1)", fileContent, fileType);
                            db.Close();
                            Response.Redirect(Request.Url.AbsoluteUri);
                        }        
                    }
                    else
                    {
                        Validation.AddFormError("The file is not an image");
                    }
                }
            }
            db.Close();
            Response.Redirect(Request.Url.AbsoluteUri);
        }
    }
}


<div class="col-md-12">
    <div class="row">
        </br>
        @if(isRobot)
        {
            <div class="col-xs-6 col-sm-2">
                <a href="~/Admin/Tools/EditRobot?Id=@robotId" class="btn btn-primary btn-block floatBtn"><span class="glyphicon glyphicon-arrow-left"></span> Back</a>
            </div> 
            <div class="col-xs-6  col-sm-offset-8 col-sm-2 floatBtn">
                <a href="@Request.Url.AbsoluteUri" class="btn btn-success btn-block"><span class="glyphicon glyphicon-refresh"></span></a>
            </div>
        }
        else
        {
            <div class="col-xs-6  col-sm-offset-10 col-sm-2 floatBtn">
                <a href="@Request.Url.AbsoluteUri" class="btn btn-success btn-block"><span class="glyphicon glyphicon-refresh"></span></a>
            </div>  
        }
    </div>
    @if(isRobot && !editCoverImage)
    {
        <h2 class="robot-title">Select Photos for @robot.RobotName</h2>
    }
    @if(isRobot && editCoverImage)
    {
        <h2 class="robot-title">Select Cover Image for @robot.RobotName</h2>
    }
    <div class="row" style="margin-left: 10px">
        <form method="post" enctype="multipart/form-data">
            <label><span class="glyphicon glyphicon-picture"></span>&nbsp; Upload a new Image</label>
            @FileUpload.GetHtml(
                initialNumberOfFiles:1,
                allowMoreFilesToBeAdded:true,
                includeFormTag:false,
                name: "Upload"
            )
            <button type="submit" id="submit" name="addPhoto" class="btn btn-default">
                <span class="glyphicon glyphicon-cloud-upload"></span> Upload
            </button>
        </form><br />
    </div>
    <div class="row">
        <div class="col-xs-6 col-sm-2 floatBtn">
            <form method="post">
                @if(!editCoverImage)
                {
                    <button type="submit" name="toggleCoverEdit" class="btn btn-success"><span class="glyphicon glyphicon-ok"></span> Enable CoverImage edit</button>
                }
                else
                {
                    <button type="submit" name="toggleCoverEdit" class="btn btn-danger"><span class="glyphicon glyphicon-remove"></span> Disable CoverImage edit</button>
                }
            </form>
        </div>
    </div>
    </br>
    <div class="row">
        @foreach(int photo in photos)
        {
            <div class="photogalleryItem">
                <a href="@App.ViewFull@photo" target="_blank">
                    <img src="@App.Thumbnail@photo?size=medium" alt="photo" class="img-responsive"/>
                </a>
                <div class="galleryTools">
                    <form method="post">
                        @AntiForgery.GetHtml()
                        @if(isRobot && !editCoverImage)
                        {
                            if(robot.hasPhoto(photo))
                            {
                                <button name="addPhoto" type="submit" class="btn btn-warning">
                                    <span class="glyphicon glyphicon-minus"></span> Remove from Robot
                                </button>
                                <input type="hidden" name="robotState" value="true">
                            }
                            else
                            {
                                <button name="addPhoto" type="submit" class="btn btn-success">
                                    <span class="glyphicon glyphicon-plus"></span> Add to Robot
                                </button>
                                <input type="hidden" name="robotState" value="false">
                            }
                        }
                        @if(isRobot && editCoverImage)
                        {
                            if(robot.CoverImage == photo)
                            {
                                <button name="addCover" type="submit" class="btn btn-warning">
                                    <span class="glyphicon glyphicon-minus"></span> Remove CoverImage
                                </button>
                                <input type="hidden" name="coverState" value="true">
                            }
                            else
                            {
                                <button name="addCover" type="submit" class="btn btn-success">
                                    <span class="glyphicon glyphicon-plus"></span> Add CoverImage
                                </button>
                                <input type="hidden" name="coverState" value="false">
                            }
                        }
                        <button name="removePhoto" type="submit" class="btn btn-danger">
                            <span class="glyphicon glyphicon-remove"></span> Delete
                        </button>
                        <input type="hidden" value="@photo" name="PhotoId"/>
                    </form>
                </div>
            </div>
        }
    </div>
</div>
